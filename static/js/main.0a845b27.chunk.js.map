{"version":3,"sources":["constants/index.js","components/Blogpost.js","containers/Blogs.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["HASHNODE_API_ENDPOINT","headerSections","name","queries","useStyles","makeStyles","card","display","cardDetails","flex","cardMedia","width","BlogPost","props","classes","post","Grid","item","xs","md","Card","className","CardContent","Typography","component","variant","title","color","dateAdded","paragraph","brief","href","slug","Hidden","xsDown","CardMedia","image","coverImage","Blogs","useState","posts","setPosts","error","setError","a","fetch","method","headers","body","JSON","stringify","query","then","res","json","response","data","user","publication","catch","useEffect","getRecentBlogs","Alert","severity","AlertTitle","Box","length","container","spacing","map","_id","Header","sections","AppBar","Container","maxWidth","Toolbar","section","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a845b27.chunk.js","sourcesContent":["export const HASHNODE_API_ENDPOINT = 'https://api.hashnode.com';\r\nexport const HASHNODE_URL = 'https://rahulborah.hashnode.dev/';\r\n\r\nexport const headerSections = [\r\n  { name: 'Blog' },\r\n  //  { name: 'About' }\r\n];\r\n\r\nexport const queries = {\r\n  RECENT:\r\n    'query { user(username:\"rahulborah\") { publication { posts(page:0) { _id title brief slug coverImage dateAdded } } } }',\r\n};\r\n","import Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { HASHNODE_URL } from '../constants';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    display: 'flex',\r\n  },\r\n  cardDetails: {\r\n    flex: 1,\r\n  },\r\n  cardMedia: {\r\n    width: 250,\r\n  },\r\n});\r\n\r\nexport default function BlogPost(props) {\r\n  const classes = useStyles();\r\n  const { post } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={12}>\r\n      <Card className={classes.card}>\r\n        <div className={classes.cardDetails}>\r\n          <CardContent>\r\n            <Typography component=\"h2\" variant=\"h5\">\r\n              {post.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n              {post.dateAdded}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" paragraph>\r\n              {post.brief}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              color=\"primary\"\r\n              component=\"a\"\r\n              href={`${HASHNODE_URL}${post.slug}`}\r\n            >\r\n              Continue reading...\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n        <Hidden xsDown>\r\n          <CardMedia\r\n            className={classes.cardMedia}\r\n            image={post.coverImage}\r\n            title={post.title}\r\n          />\r\n        </Hidden>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nBlogPost.propTypes = {\r\n  post: PropTypes.object,\r\n};\r\n","import { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { Box, Grid, Typography } from '@material-ui/core';\r\nimport { HASHNODE_API_ENDPOINT, queries } from '../constants';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport BlogPost from '../components/Blogpost';\r\n\r\nexport default function Blogs() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  async function getRecentBlogs() {\r\n    setError(null);\r\n    await fetch(HASHNODE_API_ENDPOINT, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        query: queries.RECENT,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setPosts(response?.data?.user?.publication?.posts);\r\n      })\r\n      .catch(() => {\r\n        setError(true);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRecentBlogs();\r\n  }, []);\r\n\r\n  if (error || !posts) {\r\n    return (\r\n      <Alert severity=\"error\">\r\n        <AlertTitle>Error</AlertTitle>\r\n        Oops â€” <strong>Getting recent blogs failed!</strong>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\">Recent Posts</Typography>\r\n      <br />\r\n      {posts && posts.length > 0 ? (\r\n        <Grid container spacing={3}>\r\n          {posts.map((post) => (\r\n            <BlogPost post={post} key={post._id} />\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <>Loading...</>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { AppBar, Box, Container, Toolbar, Typography } from '@material-ui/core';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Header({ title, sections = [] }) {\r\n  return (\r\n    <header>\r\n      <AppBar>\r\n        <Container maxWidth=\"lg\">\r\n          <Toolbar className=\"Header-items\">\r\n            <Typography variant=\"h6\">{title}</Typography>\r\n            <Box component=\"span\" className=\"Header-sections\">\r\n              {sections.map((section) => (\r\n                <Typography\r\n                  key={section.name}\r\n                  variant=\"h6\"\r\n                  className=\"Header-section\"\r\n                >\r\n                  {section.name}\r\n                </Typography>\r\n              ))}\r\n            </Box>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  sections: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import './App.css';\r\nimport '@fontsource/roboto';\r\n\r\nimport Blogs from './containers/Blogs';\r\nimport { Container } from '@material-ui/core';\r\nimport Header from './components/Header';\r\nimport { headerSections } from './constants';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"Rahul Kumar Borah\" sections={headerSections} />\r\n      <Container maxWidth=\"lg\" className=\"Main-container\">\r\n        <Blogs />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}